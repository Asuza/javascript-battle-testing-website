var Board=Backbone.Collection.extend({model:BoardTile}),BoardTile=Backbone.Model.extend({}),BoardTileView=Backbone.View.extend({tagName:"div",className:"battle-tile",initialize:function(){void 0===this.model&&console.log(void 0),this.render(),this.model.on("change",this.render())},render:function(){{var a=this.model.get("subType"),b=this.model.get("type");this.model.get("team")}if("Unoccupied"!==a){var c={Tree:"../img/tree.png",Adventurer:"../img/bkknight.png",BlackKnight:"../img/black-knight.png",DiamondMine:"../img/diamond.png",HealthWell:"../img/pot.png",Bones:"../img/grave.png"},d='<img src="'+c[a]+'" class="sprite">',e={0:"team-yellow",1:"team-blue"};if("Hero"===b){var f=this.model.get("name"),g=this.model.get("battleId"),h=this.model.get("health"),i=this.model.get("gameTurn"),j=this.model.get("lastActiveTurn");j===i-1&&1!==i&&this.$(".sprite").addClass("current-turn"),d='<img src="'+c[a]+'" id="H'+g+'" class="sprite">',d+='<span class="indicator '+e[this.model.get("team")]+'">'+g+"</span>",d+='<span class="lifebar"><span class="life-capacity" style="height:'+h+'%"></span></span>',this.$el.addClass("current-user-"+f)}else if("DiamondMine"===b){var k=this.model.get("owner");k&&(d+='<span class="indicator '+e[k.team]+'">'+k.id+"</span>")}this.$el.html(d)}}}),BoardView=Backbone.View.extend({tagName:"section",className:"battle-map",initialize:function(){this.render()},render:function(){this.$el.html(""),this.createBoardView()},createBoardView:function(){for(var a=this.collection.lengthOfSide,b=0;a>b;b++){for(var c=$('<div class="tile-row">'),d=0;a>d;d++){var e=new BoardTileView({model:this.collection.at(b*a+d)});c.append(e.$el)}this.$el.append(c)}}}),Game=Backbone.Model.extend({clientSideGame:{},helpers:{},setupGame:function(a,b){for(var c=function(a){return Math.floor(Math.random()*a)},d=0;8>d;d++)for(;!a.addHero(c(b),c(b),"random",0););for(var d=0;8>d;d++)for(;!a.addHero(c(b),c(b),"random",1););for(var d=0;6>d;d++)a.addHealthWell(c(b),c(b));for(var d=0;18>d;d++)a.addImpassable(c(b),c(b));for(var d=0;12>d;d++)a.addDiamondMine(c(b),c(b))},runGame:function(){if(void 0===this.get("heroCode"))return alert("Please upload your Hero.js file first."),"Error";this.waiting=!0;{var a=this.get("heroCode");a.indexOf("module.exports = move")}a=a.slice(0,a.length-26),a+="return move(arguments[0], arguments[1]);";var b=this.helpers,c=this.clientSideGame[0];this.setupGame(c,c.board.lengthOfSide);for(var d=c.handleHeroTurn,e=0;1300>e;){if(0===c.heroTurnIndex){var f=new Function(a),g=f(c,b);d.call(c,g);var h=JSON.parse(JSON.stringify(c));this.clientSideGame[e]=h}else{var i=["North","South","East","West"];d.call(c,i[Math.floor(4*Math.random())]);var h=JSON.parse(JSON.stringify(c));this.clientSideGame[e]=h}e++}var j=JSON.parse(JSON.stringify(this.clientSideGame[0]));this.gameSet(j),this.trigger("finished")},initialize:function(){},gameSet:function(a){this.set("turn",a.turn),this.set("maxTurn",a.maxTurn),this.set("moveMessages",a.moveMessage),this.set("winningTeam",a.winningTeam),this.set("attackMessages",a.attackMessage),this.set("killMessages",a.killMessage),this.set("teamDiamonds",a.totalTeamDiamonds);var b=new Team,c=new Team,d=new Board;d.lengthOfSide=a.board.lengthOfSide,_.each(a.teams[0],function(c){c.gameTurn=a.turn,c.battleId=c.id,0===c.id&&(c.name="YOUR HERO"),delete c.id;var d=new Hero(c);b.add(d)}),_.each(a.teams[1],function(b){b.gameTurn=a.turn,b.battleId=b.id,0===b.id&&(b.name="YOUR HERO"),delete b.id;var d=new Hero(b);c.add(d)}),_.each(_.flatten(a.board.tiles),function(a){a.battleId=a.id,delete a.id,a.gameTurn=this.get("turn");var b=new BoardTile(a);d.add(b)}.bind(this)),this.set("teamYellow",b),this.set("teamBlue",c),this.set("board",d)},updateTurn:function(a){var b=JSON.parse(JSON.stringify(this.clientSideGame[a]));this.gameSet(b)}}),GameView=Backbone.View.extend({tagName:"div",className:"outer",initialize:function(){this.$el.html('<br><div class="centered"><img class="start-screen" src="../../img/start-screen.png"></div>'),this.model.on("finished",function(){this.paused=!0,this.playInProgress=!1,this.sliderInitialized=!1,this.$el.html('<div class="messages"></div><div class="row map"></div>'),this.$el.append('<input class="row slider" /></div>'),this.$el.append('<div class="row play-controls"><span class="play-pause-game glyphicon glyphicon-play"></span><span class="restart-game glyphicon glyphicon-repeat"></span></div>'),this.$el.append('<span class="turn"></span>'),this.render()},this)},events:{"click .play-pause-game":"togglePlayGame","click .restart-game":"restartGame"},render:function(){this.checkWinner(),this.initializeSlider();var a=this.$el.find(".map");a.html(""),$(".messages").text(""),$(".messages").append(this.model.get("killMessages"));var b=new TeamView({collection:this.model.get("teamYellow"),className:"team-info t-yellow"});b.teamColor="Team Yellow",b.diamonds=this.model.get("teamDiamonds")[0],b.render();var c=new TeamView({collection:this.model.get("teamBlue"),className:"team-info t-blue"});c.teamColor="Team Blue",c.diamonds=this.model.get("teamDiamonds")[1],c.render();var d=new BoardView({collection:this.model.get("board")});a.append(b.$el),a.append(d.$el),a.append(c.$el),this.$el.find("#H0").after('<span class="arrow"></span>'),this.$el.find(".turn").text("Turn: "+this.model.get("turn"))},sendSliderToTurn:function(a){var b=this.$el.find(".range-bar"),c=b.find(".range-handle"),d=b.find(".range-quantity"),e=this.model.get("maxTurn"),f=a/e,g=function(a){return+a.slice(0,-2)},h=g(b.css("width")),i=g(c.css("width")),j=h-i,k=f*j;c.css("left",k+"px"),d.css("width",k+"px")},initializeSlider:function(){if(!this.sliderInitialized){this.sliderInitialized=!0;{var a=this.$el.find(".slider"),b=a[0];this.model.get("maxTurn"),new Powerange(b,{min:0,max:this.model.get("maxTurn"),step:1,callback:function(){this.pauseGame(),this.model.updateTurn(b.value),this.render()}.bind(this)})}$(document).keydown(function(a){var b=this.model.get("turn")-1,c=this.model.get("maxTurn");if(39===a.which)b++;else{if(37!==a.which)return;b--}this.pauseGame();var d=Math.max(Math.min(b,c),1);this.model.updateTurn(d),this.sendSliderToTurn(d),this.render()}.bind(this))}},restartGame:function(){this.pauseGame(),this.model.updateTurn(0),this.sendSliderToTurn(0),this.render()},pauseGame:function(){this.paused=!0;var a=this.$el.find(".play-pause-game");a.removeClass("glyphicon-pause"),a.addClass("glyphicon-play")},togglePlayGame:function(){this.paused=!this.paused;var a=this.$el.find(".play-pause-game");this.paused?(a.removeClass("glyphicon-pause"),a.addClass("glyphicon-play")):(a.removeClass("glyphicon-play"),a.addClass("glyphicon-pause"),this.autoPlayGame())},autoPlayGame:function(){var a=this.model.get("turn"),b=this.model.get("maxTurn");if(b>a&&this.paused===!1){this.model.updateTurn(a),this.sendSliderToTurn(a),this.render(),a++;var c=this;window.setTimeout(function(){c.autoPlayGame()},300)}},checkWinner:function(){var a=this.model.get("winningTeam"),b=$(".winner-msg");b.text(0===a?"Yellow Team Wins!":1===a?"Blue Team Wins!":"Simulated Game")}}),NavbarView=Backbone.View.extend({initialize:function(){this.render()},render:function(){var a;a=new EJS({url:"../ejs_templates/navbarNotLoggedIn"}).render(this.model),this.$el.html(a)}}),RulesView=Backbone.View.extend({initialize:function(){this.waiting=!1,this.render()},events:{"click .simulate":"simulate","change #hero":"getHeroCode"},simulate:function(){this.waiting=!0,this.render();var a=this;window.setTimeout(function(){a.model.runGame(),a.waiting=!1,a.render()},500)},render:function(){var a=new EJS({url:"/ejs_templates/rules"}).render(this.model),b='<button class="btn btn-success btn-lg">Simulate Game</button>',c='<button class="btn btn-danger btn-lg">Waiting for Simulation to Finish</button>';this.$el.html(a),this.waiting||this.$el.find(".simulate").html(b),this.waiting&&this.$el.find(".simulate").html(c)},getHeroCode:function(){var a=new FileReader,b=this.$el.find("#hero")[0].files[0],c=this;a.onload=function(){c.model.set("heroCode",a.result)},a.readAsText(b)}}),SiteDownView=Backbone.View.extend({initialize:function(){this.render()},render:function(){var a='<div class="site-down"><div class="row text-center"><h1 class="col-lg-12">Sorry, something went wrong</h1></div><div class="row"><img class="img-responsive" src="../../img/sad-knight.png"></div><div class="row text-center"><h3 class="col-lg-12">Please check back in a couple hours!</h4></div></div>';this.$el.html(a)}}),cbpAnimatedHeader=function(){function a(){window.addEventListener("scroll",function(){f||(f=!0,setTimeout(b,250))},!1)}function b(){var a=document.querySelector(".user-options"),b=c();b>=g?(classie.add(e,"navbar-shrink"),a&&classie.add(a,"user-options-shrink")):(classie.remove(e,"navbar-shrink"),a&&classie.remove(a,"user-options-shrink")),f=!1}function c(){return window.pageYOffset||d.scrollTop}var d=document.documentElement,e=document.querySelector(".navbar-fixed-top"),f=!1,g=300;a()}();!function(a){"use strict";function b(a){return new RegExp("(^|\\s+)"+a+"(\\s+|$)")}function c(a,b){var c=d(a,b)?f:e;c(a,b)}var d,e,f;"classList"in document.documentElement?(d=function(a,b){return a.classList.contains(b)},e=function(a,b){a.classList.add(b)},f=function(a,b){a.classList.remove(b)}):(d=function(a,c){return b(c).test(a.className)},e=function(a,b){d(a,b)||(a.className=a.className+" "+b)},f=function(a,c){a.className=a.className.replace(b(c)," ")});var g={hasClass:d,addClass:e,removeClass:f,toggleClass:c,has:d,add:e,remove:f,toggle:c};"function"==typeof define&&define.amd?define(g):a.classie=g}(window),$(function(){$(".page-scroll a").bind("click",function(a){var b=$(this);$("html, body").stop().animate({scrollTop:$(b.attr("href")).offset().top},1500,"easeInOutExpo"),a.preventDefault()})}),$(function(){$("body").on("input propertychange",".floating-label-form-group",function(a){$(this).toggleClass("floating-label-form-group-with-value",!!$(a.target).val())}).on("focus",".floating-label-form-group",function(){$(this).addClass("floating-label-form-group-with-focus")}).on("blur",".floating-label-form-group",function(){$(this).removeClass("floating-label-form-group-with-focus")})}),$("body").scrollspy({target:".navbar-fixed-top"}),$(".navbar-collapse ul li a").click(function(){$(".navbar-toggle:visible").click()});var Hero=Backbone.Model.extend({}),HeroView=Backbone.View.extend({className:"list-group-item list-group-item-info score-info",tagName:"li",initialize:function(){this.render()},render:function(){{var a=this.model.get("battleId"),b=this.model.get("health"),c=this.model.get("name");this.model.get("gameTurn"),this.model.get("lastActiveTurn")}1>b?(this.$el.removeClass("list-group-item-info").addClass("list-group-item-danger"),b="Dead"):b+="HP";var d='<div class="hero-header h-i'+a+'">(id:'+a+") <span>"+c+"</span> </div>",b='<div class="health-info h-i'+a+'">'+b+"</div>";this.$el.append(d+b)}}),Team=Backbone.Collection.extend({model:Hero}),TeamView=Backbone.View.extend({className:"list-group",tagName:"div",teamColor:void 0,initialize:function(){},render:function(){this.$el.html(""),this.teamColor&&this.$el.append('<h5 class="team-name">'+this.teamColor+" diamonds: "+this.diamonds+"</h5>"),this.createTeamView()},createTeamView:function(){_.each(this.collection.models,function(a){var b=new HeroView({model:a});this.$el.append(b.$el)}.bind(this))}});