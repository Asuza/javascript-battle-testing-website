var Board=Backbone.Collection.extend({model:BoardTile}),BoardTile=Backbone.Model.extend({}),BoardTileView=Backbone.View.extend({tagName:"div",className:"battle-tile",initialize:function(){void 0===this.model&&console.log(void 0),this.render(),this.model.on("change",this.render())},render:function(){{var a=this.model.get("subType"),b=this.model.get("type");this.model.get("team")}if("Unoccupied"!==a){var c={Tree:"../img/tree.png",Adventurer:"../img/bkknight.png",BlackKnight:"../img/black-knight.png",DiamondMine:"../img/diamond.png",HealthWell:"../img/pot.png",Bones:"../img/grave.png"},d='<img src="'+c[a]+'" class="sprite">',e={0:"team-yellow",1:"team-blue"};if("Hero"===b){var f=this.model.get("name"),g=this.model.get("battleId"),h=this.model.get("health"),i=this.model.get("gameTurn"),j=this.model.get("lastActiveTurn");j===i-1&&1!==i&&this.$(".sprite").addClass("current-turn"),d='<img src="'+c[a]+'" id="H'+g+'" class="sprite">',d+='<span class="indicator '+e[this.model.get("team")]+'">'+g+"</span>",d+='<span class="lifebar"><span class="life-capacity" style="height:'+h+'%"></span></span>',this.$el.addClass("current-user-"+f)}else if("DiamondMine"===b){var k=this.model.get("owner");k&&(d+='<span class="indicator '+e[k.team]+'">'+k.id+"</span>")}this.$el.html(d)}}}),BoardView=Backbone.View.extend({tagName:"section",className:"battle-map",initialize:function(){this.render()},render:function(){this.$el.html(""),this.createBoardView()},createBoardView:function(){for(var a=this.collection.lengthOfSide,b=0;a>b;b++){for(var c=$('<div class="tile-row">'),d=0;a>d;d++){var e=new BoardTileView({model:this.collection.at(b*a+d)});c.append(e.$el)}this.$el.append(c)}}}),Game=Backbone.Model.extend({clientSideGame:{},helpers:{},setupGame:function(a,b){for(var c=function(a){return Math.floor(Math.random()*a)},d=0;8>d;d++)for(;!a.addHero(c(b),c(b),"random",0););for(var d=0;8>d;d++)for(;!a.addHero(c(b),c(b),"random",1););for(var d=0;6>d;d++)a.addHealthWell(c(b),c(b));for(var d=0;18>d;d++)a.addImpassable(c(b),c(b));for(var d=0;12>d;d++)a.addDiamondMine(c(b),c(b))},runGame:function(){if(void 0===this.get("heroCode"))return alert("Please upload your Hero.js file first."),"Error";this.waiting=!0;{var a=this.get("heroCode");a.indexOf("module.exports = move")}a=a.slice(0,a.length-26),a+="return move(arguments[0], arguments[1]);";var b=this.helpers,c=this.clientSideGame[0];this.setupGame(c,c.board.lengthOfSide);for(var d=c.handleHeroTurn,e=0;1300>e;){if(0===c.heroTurnIndex){var f=new Function(a),g=f(c,b);d.call(c,g);var h=JSON.parse(JSON.stringify(c));this.clientSideGame[e]=h}else{var i=["North","South","East","West"];d.call(c,i[Math.floor(4*Math.random())]);var h=JSON.parse(JSON.stringify(c));this.clientSideGame[e]=h}e++}var j=JSON.parse(JSON.stringify(this.clientSideGame[0]));this.gameSet(j),this.trigger("finished")},initialize:function(){var a=new User;this.set("userModel",a)},gameSet:function(a){this.set("turn",a.turn),this.set("maxTurn",a.maxTurn),this.set("moveMessages",a.moveMessage),this.set("winningTeam",a.winningTeam),this.set("attackMessages",a.attackMessage),this.set("killMessages",a.killMessage),this.set("teamDiamonds",a.totalTeamDiamonds);var b=new Team,c=new Team,d=new Board;d.lengthOfSide=a.board.lengthOfSide,_.each(a.teams[0],function(c){c.gameTurn=a.turn,c.battleId=c.id,0===c.id&&(c.name="YOUR HERO"),delete c.id;var d=new Hero(c);b.add(d)}),_.each(a.teams[1],function(b){b.gameTurn=a.turn,b.battleId=b.id,0===b.id&&(b.name="YOUR HERO"),delete b.id;var d=new Hero(b);c.add(d)}),_.each(_.flatten(a.board.tiles),function(a){a.battleId=a.id,delete a.id,a.gameTurn=this.get("turn");var b=new BoardTile(a);d.add(b)}.bind(this)),this.set("teamYellow",b),this.set("teamBlue",c),this.set("board",d)},updateTurn:function(a){var b=JSON.parse(JSON.stringify(this.clientSideGame[a]));this.gameSet(b)}}),GameView=Backbone.View.extend({tagName:"div",className:"outer",initialize:function(){this.$el.html('<br><div class="centered"><img class="start-screen" src="../../img/start-screen.png"></div>'),this.model.on("finished",function(){this.paused=!0,this.playInProgress=!1,this.sliderInitialized=!1,this.$el.html('<div class="messages"></div><div class="row map"></div>'),this.$el.append('<input class="row slider" /></div>'),this.$el.append('<div class="row play-controls"><span class="play-pause-game glyphicon glyphicon-play"></span><span class="restart-game glyphicon glyphicon-repeat"></span></div>'),this.$el.append('<span class="turn"></span>'),this.render()},this)},events:{"click .play-pause-game":"togglePlayGame","click .restart-game":"restartGame"},render:function(){this.checkWinner(),this.initializeSlider();var a=this.$el.find(".map");a.html(""),$(".messages").text(""),$(".messages").append(this.model.get("killMessages"));var b=new TeamView({collection:this.model.get("teamYellow"),className:"team-info t-yellow"});b.teamColor="Team Yellow",b.diamonds=this.model.get("teamDiamonds")[0],b.render();var c=new TeamView({collection:this.model.get("teamBlue"),className:"team-info t-blue"});c.teamColor="Team Blue",c.diamonds=this.model.get("teamDiamonds")[1],c.render();var d=new BoardView({collection:this.model.get("board")});a.append(b.$el),a.append(d.$el),a.append(c.$el),this.$el.find("#H0").after('<span class="arrow"></span>'),this.$el.find(".turn").text("Turn: "+this.model.get("turn"))},sendSliderToTurn:function(a){var b=this.$el.find(".range-bar"),c=b.find(".range-handle"),d=b.find(".range-quantity"),e=this.model.get("maxTurn"),f=a/e,g=function(a){return+a.slice(0,-2)},h=g(b.css("width")),i=g(c.css("width")),j=h-i,k=f*j;c.css("left",k+"px"),d.css("width",k+"px")},initializeSlider:function(){if(!this.sliderInitialized){this.sliderInitialized=!0;{var a=this.$el.find(".slider"),b=a[0];this.model.get("maxTurn"),new Powerange(b,{min:0,max:this.model.get("maxTurn"),step:1,callback:function(){this.pauseGame(),this.model.updateTurn(b.value),this.render()}.bind(this)})}$(document).keydown(function(a){var b=this.model.get("turn")-1,c=this.model.get("maxTurn");if(39===a.which)b++;else{if(37!==a.which)return;b--}this.pauseGame();var d=Math.max(Math.min(b,c),1);this.model.updateTurn(d),this.sendSliderToTurn(d),this.render()}.bind(this))}},restartGame:function(){this.pauseGame(),this.model.updateTurn(0),this.sendSliderToTurn(0),this.render()},pauseGame:function(){this.paused=!0;var a=this.$el.find(".play-pause-game");a.removeClass("glyphicon-pause"),a.addClass("glyphicon-play")},togglePlayGame:function(){this.paused=!this.paused;var a=this.$el.find(".play-pause-game");this.paused?(a.removeClass("glyphicon-pause"),a.addClass("glyphicon-play")):(a.removeClass("glyphicon-play"),a.addClass("glyphicon-pause"),this.autoPlayGame())},autoPlayGame:function(){var a=this.model.get("turn"),b=this.model.get("maxTurn");if(b>a&&this.paused===!1){this.model.updateTurn(a),this.sendSliderToTurn(a),this.render(),a++;var c=this;window.setTimeout(function(){c.autoPlayGame()},300)}},checkWinner:function(){var a=this.model.get("winningTeam"),b=$(".winner-msg");b.text(0===a?"Yellow Team Wins!":1===a?"Blue Team Wins!":"Simulated Game")}}),NavbarView=Backbone.View.extend({initialize:function(){this.render(),$.when(this.model.fetch()).then(function(){this.render()}.bind(this))},render:function(){var a,b=this.model.get("githubHandle");a=b?new EJS({url:"../ejs_templates/navbar"}).render(this.model):new EJS({url:"../ejs_templates/navbarNotLoggedIn"}).render(this.model),this.$el.html(a)}}),RulesView=Backbone.View.extend({initialize:function(){this.waiting=!1,this.render()},events:{"click .simulate":"simulate","change #hero":"getHeroCode"},simulate:function(){this.waiting=!0,this.render();var a=this;window.setTimeout(function(){a.model.runGame(),a.waiting=!1,a.render()},500)},render:function(){var a=new EJS({url:"/ejs_templates/rules"}).render(this.model),b='<button class="btn btn-success btn-lg">Simulate Game</button>',c='<button class="btn btn-danger btn-lg">Waiting for Simulation to Finish</button>';this.$el.html(a),this.waiting||this.$el.find(".simulate").html(b),this.waiting&&this.$el.find(".simulate").html(c)},getHeroCode:function(){var a=new FileReader,b=this.$el.find("#hero")[0].files[0],c=this;a.onload=function(){c.model.set("heroCode",a.result)},a.readAsText(b)}}),SiteDownView=Backbone.View.extend({initialize:function(){this.render()},render:function(){var a='<div class="site-down"><div class="row text-center"><h1 class="col-lg-12">Sorry, something went wrong</h1></div><div class="row"><img class="img-responsive" src="../../img/sad-knight.png"></div><div class="row text-center"><h3 class="col-lg-12">Please check back in a couple hours!</h4></div></div>';this.$el.html(a)}}),cbpAnimatedHeader=function(){function a(){window.addEventListener("scroll",function(){f||(f=!0,setTimeout(b,250))},!1)}function b(){var a=document.querySelector(".user-options"),b=c();b>=g?(classie.add(e,"navbar-shrink"),a&&classie.add(a,"user-options-shrink")):(classie.remove(e,"navbar-shrink"),a&&classie.remove(a,"user-options-shrink")),f=!1}function c(){return window.pageYOffset||d.scrollTop}var d=document.documentElement,e=document.querySelector(".navbar-fixed-top"),f=!1,g=300;a()}();!function(a){"use strict";function b(a){return new RegExp("(^|\\s+)"+a+"(\\s+|$)")}function c(a,b){var c=d(a,b)?f:e;c(a,b)}var d,e,f;"classList"in document.documentElement?(d=function(a,b){return a.classList.contains(b)},e=function(a,b){a.classList.add(b)},f=function(a,b){a.classList.remove(b)}):(d=function(a,c){return b(c).test(a.className)},e=function(a,b){d(a,b)||(a.className=a.className+" "+b)},f=function(a,c){a.className=a.className.replace(b(c)," ")});var g={hasClass:d,addClass:e,removeClass:f,toggleClass:c,has:d,add:e,remove:f,toggle:c};"function"==typeof define&&define.amd?define(g):a.classie=g}(window),$(function(){$(".page-scroll a").bind("click",function(a){var b=$(this);$("html, body").stop().animate({scrollTop:$(b.attr("href")).offset().top},1500,"easeInOutExpo"),a.preventDefault()})}),$(function(){$("body").on("input propertychange",".floating-label-form-group",function(a){$(this).toggleClass("floating-label-form-group-with-value",!!$(a.target).val())}).on("focus",".floating-label-form-group",function(){$(this).addClass("floating-label-form-group-with-focus")}).on("blur",".floating-label-form-group",function(){$(this).removeClass("floating-label-form-group-with-focus")})}),$("body").scrollspy({target:".navbar-fixed-top"}),$(".navbar-collapse ul li a").click(function(){$(".navbar-toggle:visible").click()});var Hero=Backbone.Model.extend({}),HeroView=Backbone.View.extend({className:"list-group-item list-group-item-info score-info",tagName:"li",initialize:function(){this.render()},render:function(){{var a=this.model.get("battleId"),b=this.model.get("health"),c=this.model.get("name");this.model.get("gameTurn"),this.model.get("lastActiveTurn")}1>b?(this.$el.removeClass("list-group-item-info").addClass("list-group-item-danger"),b="Dead"):b+="HP";var d='<div class="hero-header h-i'+a+'">(id:'+a+") <span>"+c+"</span> </div>",b='<div class="health-info h-i'+a+'">'+b+"</div>";this.$el.append(d+b)}}),Team=Backbone.Collection.extend({model:Hero}),TeamView=Backbone.View.extend({className:"list-group",tagName:"div",teamColor:void 0,initialize:function(){},render:function(){this.$el.html(""),this.teamColor&&this.$el.append('<h5 class="team-name">'+this.teamColor+" diamonds: "+this.diamonds+"</h5>"),this.createTeamView()},createTeamView:function(){_.each(this.collection.models,function(a){var b=new HeroView({model:a});this.$el.append(b.$el)}.bind(this))}}),User=Backbone.Model.extend({url:"/userInfo",idAttribute:"_id"}),UserView=Backbone.View.extend({initialize:function(){this.viewing={},this.viewing="settings",this.render(),$.when(this.model.fetch()).then(function(){this.render()}.bind(this))},events:{submit:"handleSubmit","click .settings":"showSettings","click .recentStats":"showRecent","click .lifetimeStats":"showLifetime","click .averageStats":"showAverage"},handleSubmit:function(a){a.preventDefault();var b=this.$el.find("#inputRepo").val(),c=this.model.get("codeRepo");0!==b.length&&b!==c?(this.model.set("codeRepo",_.escape(b)),this.model.save(),this.render(),this.$el.find(".form-group").addClass("has-success"),this.$el.find(".form-group").addClass("has-feedback")):(this.$el.find(".form-group").removeClass("has-success"),this.$el.find(".form-group").removeClass("has-feedback"),this.render())},showSettings:function(a){a.preventDefault(),this.viewing="settings",this.render(),this.$el.find(".settings").tab("show")},showRecent:function(a){a.preventDefault(),this.viewing="recent",this.render(),this.$el.find(".recentStats").tab("show")},showLifetime:function(a){a.preventDefault(),this.viewing="lifetime",this.render(),this.$el.find(".lifetimeStats").tab("show")},showAverage:function(a){a.preventDefault(),this.viewing="average",this.render(),this.$el.find(".averageStats").tab("show")},render:function(){var a,b=this.model.get("githubHandle");if(b&&"settings"===this.viewing)a=new EJS({url:"/ejs_templates/settings"}).render(this.model);else if(b&&"lifetime"===this.viewing)a=new EJS({url:"/ejs_templates/lifetime"}).render(this.model);else if(b&&"recent"===this.viewing)a=new EJS({url:"/ejs_templates/recent"}).render(this.model);else if(b&&"average"===this.viewing){var c=this.model.average();c.githubHandle=this.model.get("githubHandle"),a=new EJS({url:"/ejs_templates/average"}).render(c)}else b||(a=new EJS({url:"/ejs_templates/notLoggedIn"}).render(this.model));this.$el.html(a)}}),app={};app.game=new Game;var initialGame=require("./game_classes/Game.js");app.game.clientSideGame[0]=new initialGame(12),app.game.helpers=require("./helpers.js"),app.gameView=new GameView({model:app.game}),$(".gamegrid-content").append(app.gameView.$el),app.user=new User,app.userView=new UserView({model:app.user}),$("#join").append(app.userView.$el),app.navbarView=new NavbarView({model:app.user}),$(".navbar").append(app.navbarView.$el),app.rulesView=new RulesView({model:app.game}),$("#rules").append(app.rulesView.$el),function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a){var b={};b.game=new Game;var c=a("./game_classes/Game.js");b.game.clientSideGame[0]=new c(12),b.game.helpers=a("./helpers.js"),b.gameView=new GameView({model:b.game}),$(".gamegrid-content").append(b.gameView.$el),b.user=new User,b.userView=new UserView({model:b.user}),$("#join").append(b.userView.$el),b.navbarView=new NavbarView({model:b.user}),$(".navbar").append(b.navbarView.$el),b.rulesView=new RulesView({model:b.game}),$("#rules").append(b.rulesView.$el)},{"./game_classes/Game.js":4,"./helpers.js":9}],2:[function(a,b){var c=a("./Unoccupied.js"),d=function(a){this.tiles=[],this.lengthOfSide=a,this.initializeBoard()};d.prototype.inspect=function(){for(var a="|",b=0;b<this.lengthOfSide;b++){for(var c="|",d=0;d<this.lengthOfSide;d++)c+=this.tiles[b][d].getCode()+"|",0===b&&(a+="---|");0===b&&console.log(a),console.log(c),console.log(a)}console.log("********")},d.prototype.initializeBoard=function(){for(var a=0;a<this.lengthOfSide;a++){this.tiles.push([]);for(var b=0;b<this.lengthOfSide;b++)this.tiles[a].push(new c(a,b))}},d.prototype.validCoordinates=function(a,b){return!(0>a||0>b||a>this.lengthOfSide-1||b>this.lengthOfSide-1)},d.prototype.getTileNearby=function(a,b,c){var d=a,e=b;if("North"===c)d-=1;else if("East"===c)e+=1;else if("South"===c)d+=1;else{if("West"!==c)return!1;e-=1}return this.validCoordinates(d,e)?this.tiles[d][e]:!1},b.exports=d},{"./Unoccupied.js":8}],3:[function(a,b){var c=function(a,b){this.id=void 0,this.distanceFromTop=a,this.distanceFromLeft=b,this.type="DiamondMine",this.subType="DiamondMine",this.owner=void 0};c.prototype.getCode=function(){var a=this.id.toString();return 1===a.length&&(a="0"+a),"D"+a},c.prototype.updateOwner=function(a){void 0!==this.owner&&this.owner.loseMine(this),this.owner=a},b.exports=c},{}],4:[function(a,b){var c=a("./Board.js"),d=a("./Hero.js"),e=a("./DiamondMine.js"),f=a("./Unoccupied.js"),g=a("./Impassable.js"),h=a("./HealthWell.js"),i=20,j=20,k=10,l=30,m=40,n=function(a){this.board=new c(a),this.heroes=[],this.heroTurnIndex=0,this.activeHero=void 0,this.teams=[[],[]],this.totalTeamDiamonds=[0,0],this.diamondMines=[],this.healthWells=[],this.impassables=[],this.ended=!1,this.winningTeam=void 0,this.diamondMessage="",this.moveMessage="Game is about to start",this.attackMessage="",this.killMessage="",this.maxTurn=1300,this.turn=0,this.hasStarted=!1,this.date,this.gameNumber};n.prototype.addHero=function(a,b,c,e){if(this.hasStarted)throw new Error("Cannot add heroes after the game has started!");if("Unoccupied"===this.board.tiles[a][b].type){var f=new d(a,b,c,e);return 0===this.heroes.length&&(this.activeHero=f),f.id=this.heroes.length,this.board.tiles[a][b]=f,this.heroes.push(f),this.teams[f.team].push(f),!0}return!1},n.prototype.addDiamondMine=function(a,b){if(this.hasStarted)throw new Error("Cannot add diamond mines after the game has started!");if("Unoccupied"===this.board.tiles[a][b].type){var c=new e(a,b);c.id=this.diamondMines.length,this.board.tiles[a][b]=c,this.diamondMines.push(c)}},n.prototype.addHealthWell=function(a,b){if(this.hasStarted)throw new Error("Cannot add health wells after the game has started!");if("Unoccupied"===this.board.tiles[a][b].type){var c=new h(a,b);this.board.tiles[a][b]=c,this.healthWells.push(c)}},n.prototype.addImpassable=function(a,b){if(this.hasStarted)throw new Error("Cannot add impassables after the game has started!");if("Unoccupied"===this.board.tiles[a][b].type){var c=new g(a,b);this.board.tiles[a][b]=c,this.impassables.push(c)}},n.prototype.handleHeroTurn=function(a){if(!this.ended){this.diamondMessage="",this.moveMessage="",this.attackMessage="",this.killMessage="",this.hasStarted=!0;var b=this.activeHero;if(b.dead)throw new Error("Dead heroes should never even have turns!");if(b.lastActiveTurn=this.turn,this._handleHeroEarnings(b),this._handleHeroMove(b,a),b.dead?this.heroDied(b):this._resolveHeroAttacks(b),this._incrementTurn(),this.turn>=this.maxTurn){this.ended=!0;var c=this._teamDiamonds(this.teams[0]),d=this._teamDiamonds(this.teams[1]);this.winningTeam=d>c?1:0}else this._teamIsDead(this.teams[0])?(this.winningTeam=1,this.maxTurn=this.turn,this.ended=!0):this._teamIsDead(this.teams[1])&&(this.winningTeam=0,this.maxTurn=this.turn,this.ended=!0);if(this.ended)for(var e=0;e<this.heroes.length;e++){var b=this.heroes[e];b.won=b.team===this.winningTeam?!0:!1}}},n.prototype._handleHeroEarnings=function(a){this.diamondMessage=a.mineCount>0?a.name+" got "+a.mineCount+" diamonds from his mines":a.name+" owns no mines, and got no diamonds",this.totalTeamDiamonds[a.team]+=a.mineCount,a.diamondsEarned+=a.mineCount},n.prototype._handleHeroMove=function(a,b){this.moveMessage=a.name+" walked "+b;var c=this.board.getTileNearby(a.distanceFromTop,a.distanceFromLeft,b);if(c===!1)return void(this.moveMessage+="...and realized that wasn't possible");if("Unoccupied"===c.type)this.board.tiles[a.distanceFromTop][a.distanceFromLeft]=new f(a.distanceFromTop,a.distanceFromLeft),"Bones"===c.subType&&a.gravesRobbed++,a.distanceFromTop=c.distanceFromTop,a.distanceFromLeft=c.distanceFromLeft,this.board.tiles[a.distanceFromTop][a.distanceFromLeft]=a;else if("DiamondMine"===c.type){var d=c;if(a.captureMine(d,i),a.dead)return this.heroDied(a),void(this.moveMessage+=", tried to capture a diamond mine, but died");this.moveMessage+=" and is now the proud owner of diamond mine #"+d.id,d.owner=a}else if("HealthWell"===c.type)this.moveMessage+=", drank from a health well, and now feels MUCH better",a.healDamage(l);else if("Hero"===c.type){var e=c;e.team!==a.team?(this.moveMessage+=", and stabbed "+e.name+" for extra damage",a.damageDone+=e.takeDamage(k)):(this.moveMessage+=", and healed "+e.name,a.healthGiven+=e.healDamage(m))}},n.prototype._resolveHeroAttacks=function(a){for(var b=["North","East","South","West"],c=0;c<b.length;c++){var d=this.board.getTileNearby(a.distanceFromTop,a.distanceFromLeft,b[c]);if(d===!1);else if("Hero"===d.type){var e=d;e.team!==a.team&&(""===this.attackMessage?this.attackMessage=a.name+" stabbed "+e.name:this.attackMessage+=" and "+e.name,a.damageDone+=e.takeDamage(j),e.dead&&(this.heroDied(e),a.killedHero(e),this.killMessage=a.name+" killed "+e.name+"!"))}}},n.prototype._teamDiamonds=function(a){for(var b=0,c=0;c<a.length;c++)b+=a[c].diamondsEarned;return b},n.prototype._teamIsDead=function(a){for(var b=0;b<a.length;b++)if(!a[b].dead)return!1;return!0},n.prototype._incrementTurn=function(){var a=function(){this.heroTurnIndex++,this.heroTurnIndex>=this.heroes.length&&(this.heroTurnIndex=0)}.bind(this);for(a();this.heroes[this.heroTurnIndex].dead;)a();this.activeHero=this.heroes[this.heroTurnIndex],this.turn++},n.prototype.heroDied=function(a){top=a.distanceFromTop,left=a.distanceFromLeft;var b=new f(top,left);b.subType="Bones"},b.exports=n},{"./Board.js":2,"./DiamondMine.js":3,"./HealthWell.js":5,"./Hero.js":6,"./Impassable.js":7,"./Unoccupied.js":8}],5:[function(a,b){var c=function(a,b){this.distanceFromTop=a,this.distanceFromLeft=b,this.type="HealthWell",this.subType="HealthWell"};c.prototype.getCode=function(){return"WWW"},b.exports=c},{}],6:[function(a,b){var c=function(a,b,c,d){this.id=void 0,this.distanceFromTop=a,this.distanceFromLeft=b,this.minesOwned={},this.mineCount=0,this.minesCaptured=0,this.health=100,this.dead=!1,this.diamondsEarned=0,this.damageDone=0,this.heroesKilled=[],this.lastActiveTurn=0,this.gravesRobbed=0,this.healthRecovered=0,this.healthGiven=0,this.won=!1,this.type="Hero",this.subType=0===d?"BlackKnight":"Adventurer",this.team=d,this.name=c};c.prototype.killedHero=function(a){this.heroesKilled.push(a.id)},c.prototype.takeDamage=function(a){return this.health-=a,this.health<=0?(this.dead=!0,a+this.health):a},c.prototype.healDamage=function(a){var b=this.health;this.health+=a,this.health>100&&(this.health=100);var c=this.health-b;return this.healthRecovered+=c,c},c.prototype.captureMine=function(a,b){this.minesOwned.hasOwnProperty(a.id)||(this.takeDamage(b),this.dead||(this.minesOwned[a.id]=a.id,this.mineCount++,this.minesCaptured++,a.updateOwner(this)))},c.prototype.loseMine=function(a){this.minesOwned.hasOwnProperty(a.id)&&(this.mineCount--,delete this.minesOwned[a.id])},c.prototype.getCode=function(){var a=this.id.toString();return 1===a.length&&(a="0"+a),"H"+a},b.exports=c},{}],7:[function(a,b){var c=function(a,b){this.id=void 0,this.type="Impassable",this.subType="Tree",this.distanceFromTop=a,this.distanceFromLeft=b};c.prototype.getCode=function(){return"III"},b.exports=c},{}],8:[function(a,b){var c=function(a,b){this.type="Unoccupied",this.subType="Unoccupied",this.distanceFromTop=a,this.distanceFromLeft=b};c.prototype.getCode=function(){return"   "},b.exports=c},{}],9:[function(a,b){var c={};c.validCoordinates=function(a,b,c){return!(0>b||0>c||b>a.lengthOfSide-1||c>a.lengthOfSide-1)},c.getTileNearby=function(a,b,d,e){var f=b,g=d;if("North"===e)f-=1;else if("East"===e)g+=1;else if("South"===e)f+=1;else{if("West"!==e)return!1;g-=1}return c.validCoordinates(a,f,g)?a.tiles[f][g]:!1},c.findNearestObjectDirectionAndDistance=function(a,b,d){var e=[],f={},g=b.distanceFromTop,h=b.distanceFromLeft,i=[g,h,"None","START"];for(f[g+"|"+h]=!0,e.push(i);e.length>0;)for(var j=e.shift(),g=j[0],h=j[1],k=["North","East","South","West"],l=0;l<k.length;l++){var m=k[l],n=c.getTileNearby(a,g,h,m);if(n){var o=n.distanceFromTop+"|"+n.distanceFromLeft,p=!1;try{p=d(n)}catch(q){p=!1}if(f.hasOwnProperty(o));else{if(p){for(var r=m,s=1,t=[n.distanceFromTop,n.distanceFromLeft];"START"!==j[3];)r=j[2],s++,j=j[3];return{direction:r,distance:s,coords:t}}"Unoccupied"===n.type&&(e.push([n.distanceFromTop,n.distanceFromLeft,m,j]),f[o]=!0)}}}return!1},c.findNearestNonTeamDiamondMine=function(a){var b=a.activeHero,d=a.board,e=c.findNearestObjectDirectionAndDistance(d,b,function(a){return"DiamondMine"===a.type?a.owner?a.owner.team!==b.team:!0:!1},d);return e.direction},c.findNearestUnownedDiamondMine=function(a){var b=a.activeHero,d=a.board,e=c.findNearestObjectDirectionAndDistance(d,b,function(a){return"DiamondMine"===a.type?a.owner?a.owner.id!==b.id:!0:!1});return e.direction},c.findNearestHealthWell=function(a){var b=a.activeHero,d=a.board,e=c.findNearestObjectDirectionAndDistance(d,b,function(a){return"HealthWell"===a.type});return e.direction},c.findNearestWeakerEnemy=function(a){var b=a.activeHero,d=a.board,e=c.findNearestObjectDirectionAndDistance(d,b,function(a){return"Hero"===a.type&&a.team!==b.team&&a.health<b.health});return e.direction},c.findNearestEnemy=function(a){var b=a.activeHero,d=a.board,e=c.findNearestObjectDirectionAndDistance(d,b,function(a){return"Hero"===a.type&&a.team!==b.team});return e.direction},c.findNearestTeamMember=function(a){var b=a.activeHero,d=a.board,e=c.findNearestObjectDirectionAndDistance(d,b,function(a){return"Hero"===a.type&&a.team===b.team});return e.direction},b.exports=c},{}]},{},[1]);